{"mappings":"YAAA,IAAMA,EAAU,+BCOhB,IAAMC,EAAcC,SAASC,cAAc,iBACrCC,EAASF,SAASC,cAAc,WAChCE,EAAQH,SAASC,cAAc,UAErC,SAASG,IACPF,EAAOG,MAAMC,QAAU,O,CAIE,SAAlBC,IACPL,EAAOG,MAAMC,QAAU,M,CAGzB,SAASE,IACPL,EAAME,MAAMC,QAAU,O,CAIO,SAAtBG,IACPN,EAAME,MAAMC,QAAU,M,CAIUI,OAA3BC,iBAAiB,oBAAoB,WDzBrC,IACCC,ECyBNb,EAAYM,MAAMC,QAAU,OAE5BF,IACAK,KD5BMG,EAAM,GAAWC,OAARf,EAAQ,WAGhBgB,MAAMF,GAAKG,MAAK,SAAAC,GACrB,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAEZ,OAAOF,EAASG,M,KCuBfJ,MAAK,SAAAK,GACJrB,EAAYM,MAAMC,QAAU,QAEkBc,EAAvCC,SAAQ,SAAAC,GACb,IAAMC,EAASvB,SAASwB,cAAc,UACtCD,EAAOE,MAAQH,EAAMI,GACrBH,EAAOI,YAAcL,EAAMM,KAC3B7B,EAAY8B,YAAYN,E,OAG3BO,OAAM,SAAAC,GAEaC,QAAVC,MAAM,SAAUF,GAEDvB,G,IAExB0B,SAAQ,WACP3B,G,OAIN,IAAM4B,EAAUnC,SAASC,cAAc,aAcAF,EAA3BY,iBAAiB,UAAU,WACrC,IDvD8ByB,EACxBxB,ECsDAyB,EAAkBtC,EAAY0B,MACpCrB,KDxD8BgC,ECyDdC,EDxDVzB,EAAM,GAAsCC,OAAnCf,EAAQ,6BAA8Ce,OAAnBuB,EAAQ,aAAkBvB,OAhB5E,yEAmBOC,MAAMF,GAAKG,MAAK,SAAAC,GACrB,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,uDAElB,OAAOF,EAASG,M,KCkDfJ,MAAK,SAAAuB,GACAA,EAAKC,OAAS,GAhBiB,SAAlBC,GACrBR,QAAQS,IAAID,GACZL,EAAQO,UAAY,mBACW7B,OAAjB2B,EAAI5B,IAAI,WACdC,OADuB2B,EAAIpB,OAAO,GAAGQ,KAAK,gCAEbf,OAD7B2B,EAAIpB,OAAO,GAAGQ,KAAK,gDAEUf,OADA2B,EAAIpB,OAAO,GAAGuB,YAAY,+CACA9B,OAA1B2B,EAAIpB,OAAO,GAAGwB,YAAY,W,CAYzDC,CADYP,EAAK,IAInB7B,G,IAEDqB,OAAM,SAAAgB,GAEad,QAAVC,MAAM,SAAUa,EAAMC,SAE9BvC,G,IAED0B,SAAQ,WACP3B,G","sources":["src/js/cat-api.js","src/index.js"],"sourcesContent":["const baseUrl = 'https://api.thecatapi.com/v1';\nconst apiKey =\n  'live_nvN6V6WTD2gDfrOOwxXVO5XLV6poYxUSpIOxGLDBmwCrEPx5gNr0c2il0DOGmlwy';\n\n// Функция для получения пород\nexport function fetchBreeds() {\n  const url = `${baseUrl}/breeds`;\n\n  // Возвращаем промис, который выполнится после получения данных\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error();\n    }\n    return response.json();\n  });\n}\n\nexport function fetchCatByBreed(breedId) {\n  const url = `${baseUrl}/images/search?breed_ids=${breedId}&api_key=${apiKey}`;\n\n  // Возвращаем промис, который выполнится после получения данных\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error('Oops! Something went wrong! Try reloading the page!');\n    }\n    return response.json();\n  });\n}\n","import { fetchBreeds, fetchCatByBreed } from './js/cat-api';\n// import SlimSelect from 'slim-select'\n\n// new SlimSelect({\n//   select: '#selectElement'\n// })\n\nconst breedSelect = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader');\nconst error = document.querySelector('.error');\n\nfunction showLoader() {\n  loader.style.display = 'block';\n}\n\n// Функция для скрытия загрузчика\nfunction hideLoader() {\n  loader.style.display = 'none';\n}\n\nfunction showError() {\n  error.style.display = 'block';\n}\n\n// Функция для скрытия элемента ошибки\nfunction hideError() {\n  error.style.display = 'none';\n}\n\n// Вызываем функцию fetchBreeds при загрузке страницы\nwindow.addEventListener('DOMContentLoaded', () => {\n  breedSelect.style.display = 'none';\n\n  showLoader();\n  hideError();\n  fetchBreeds()\n    .then(breeds => {\n      breedSelect.style.display = 'block';\n      // Наполняем select элемент опциями на основе полученных пород\n      breeds.forEach(breed => {\n        const option = document.createElement('option');\n        option.value = breed.id;\n        option.textContent = breed.name;\n        breedSelect.appendChild(option);\n      });\n    })\n    .catch(error => {\n      // Обрабатываем ошибку\n      console.error('Error:', error);\n      // Показываем элемент ошибки\n      showError();\n    })\n    .finally(() => {\n      hideLoader();\n    });\n});\n\nconst catInfo = document.querySelector('.cat-info');\n\n// Функция для обновления информации о коте в блоке cat-info\nfunction updateCatInfo(cat) {\n  console.log(cat);\n  catInfo.innerHTML = `\n    <img src=\"${cat.url}\" alt=\"${cat.breeds[0].name}\" width=\"400px\" />\n    <h2>${cat.breeds[0].name}</h2>\n    <p><strong>Description:</strong> ${cat.breeds[0].description}</p>\n    <p><strong>Temperament:</strong> ${cat.breeds[0].temperament}</p>\n  `;\n}\n\n// Слушаем событие изменения значения в селекте\nbreedSelect.addEventListener('change', () => {\n  const selectedBreedId = breedSelect.value;\n  showLoader();\n  fetchCatByBreed(selectedBreedId)\n    .then(cats => {\n      if (cats.length > 0) {\n        const cat = cats[0];\n        updateCatInfo(cat);\n      }\n\n      hideError();\n    })\n    .catch(error => {\n      // Обрабатываем ошибку\n      console.error('Error:', error.message);\n      // Показываем элемент ошибки\n      showError();\n    })\n    .finally(() => {\n      hideLoader();\n    });\n});\n"],"names":["$8994e83c1b13b9e2$var$baseUrl","$b8f9b7833fa37166$var$breedSelect","document","querySelector","$b8f9b7833fa37166$var$loader","$b8f9b7833fa37166$var$error","$b8f9b7833fa37166$var$showLoader","style","display","$b8f9b7833fa37166$var$hideLoader","$b8f9b7833fa37166$var$showError","$b8f9b7833fa37166$var$hideError","window","addEventListener","url","concat","fetch","then","response","ok","Error","json","breeds","forEach","breed","option","createElement","value","id","textContent","name","appendChild","catch","error1","console","error","finally","$b8f9b7833fa37166$var$catInfo","breedId","selectedBreedId","cats","length","cat","log","innerHTML","description","temperament","$b8f9b7833fa37166$var$updateCatInfo","error2","message"],"version":3,"file":"index.6498c9bc.js.map"}